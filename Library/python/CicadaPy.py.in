
import os
from ROOT import gSystem
import logging
import colorlog

logger = logging.getLogger(__name__)
logger.setLevel(logging.DEBUG)
base_format = '%(asctime)s{}[%(levelname)-8s] %(name)s(%(lineno)d) -> {}%(message)s'
formatter = colorlog.ColoredFormatter(
    base_format.format('%(log_color)s', '%(purple)s'),
    datefmt='%Y-%m-%dT%H:%M:%SZ'[:-1],
    reset=True,
)
handler = logging.StreamHandler()
handler.setFormatter(formatter)
logger.addHandler(handler)

def print_logo():

    print('\
        _                __     \n\
  _____(_)________ _____/ /___ _\n\
 / ___/ / ___/ __ `/ __  / __ `/\n\
/ /__/ / /__/ /_/ / /_/ / /_/ / \n\
\___/_/\___/\__,_/\__,_/\__,_/  \n')



def loadLibraries(silence=False):
    import ROOT
    if hasattr(ROOT,"Cicada"):
        # logger.debug("Libraries already loaded...")
        return
    if silence:
        print_logo()        
        from ROOT import RooMsgService
        RooMsgService.instance().setSilentMode(True)
        RooMsgService.instance().setGlobalKillBelow(5)
        logger.setLevel(logging.INFO)
    else:
        # print_image()
        print_logo()

    logger.debug("Import library...")
    lib_path = os.path.join("$<TARGET_PROPERTY:${lib_target},INSTALL_NAME_DIR>", "$<TARGET_FILE_NAME:${lib_target}>")
    logger.debug("\t->{}".format(lib_path))
    ROOT.gSystem.Load(lib_path)

    logger.info("All set!")
